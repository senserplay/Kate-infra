name: Deploy to Prod

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: cr.yandex/${{ secrets.REGISTRY_ID }}
      VERSION: ${{ github.event.inputs.version }}

    steps:
      - name: Verify image exists
        run: |
          docker manifest inspect ${REGISTRY}/app:${VERSION}_latest

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            docker pull ${REGISTRY}/app:${VERSION}_latest
            docker stop app || true
            docker rm app   || true
            docker run -d --name app ${REGISTRY}/app:${VERSION}_latest

      - name: Comment on Release Issue
        uses: actions/github-script@v6
        env:
          VERSION: ${{ env.VERSION }}
        with:
          script: |
            // найдём issue “Release <VERSION>”
            const list = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            const iss = list.data.find(i=>i.title===`Release ${process.env.VERSION}`);
            if (!iss) throw new Error(`Cannot find Release ${process.env.VERSION} issue`);
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: iss.number,
              body: `
🚀 Deployed to production
- Date: ${new Date().toISOString().slice(0,10)}
- By: @${context.actor}
`
            });
